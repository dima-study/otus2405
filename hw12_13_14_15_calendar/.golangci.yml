run:
  tests: true
  build-tags:
    - bench
    - !bench

linters-settings:
  funlen:
    lines: 200
    statements: 80
  depguard:
    rules:
      main:
        list-mode: lax
        # List of file globs that will match this list of settings to compare against.
        # Default: $all
        files:
          - "$all"
          - "!**/*_test.go"
        # List of allowed packages.
        allow:
          - $gostd
        deny:
          - pkg: "github.com/pkg/errors"
            desc: Should be replaced by standard lib errors package
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/dima-study/otus2405) # Custom section: groups all imports with the specified Prefix.
      #- blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      #- dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
      #- alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
      #- localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.
    # Skip generated files.
    # Default: true
    skip-generated: true
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true
    # Drops lexical ordering for custom sections.
    # Default: false
    no-lex-order: false
  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: false
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`.
        json: camel
        yaml: snake
        xml: camel
        toml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
        env: upperSnake
        envconfig: upperSnake


issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - errcheck
        - dupl
        - gocyclo
        - gosec

linters:
  disable-all: true
  enable:
    - asciicheck
    - depguard
    - dogsled
    - dupl
    - bodyclose
    - durationcheck
    - errorlint
    - exhaustive
    - exportloopref
    - funlen
    - gci
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - lll
    - makezero
    - misspell
    - nestif
    - nilerr
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - tagliatelle
    - thelper
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
